@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@using Blazr.RenderState
@inject IBlazrRenderStateService RenderState


<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider CloseButton="true"
                   MaxWidth="MaxWidth.Medium"
                   BackdropClick="false"
                   Position="DialogPosition.Center"
                   CloseOnEscapeKey="true" />
<MudSnackbarProvider />
<AppUserProvider>
<CascadingValue Value="_drawerOpen">
    <MudLayout Style="position:absolute;">
        @if (_showSplashScreen && !IsStaticSSR)
        {
            <SplashScreen />
        }
            @if (!IsGuestPage())
            {
                <NavMenu @rendermode="InteractiveServer" />
            }
            @* Conditionally render @Body based on IsStaticSSR to ensure login flow *@
            @if (IsStaticSSR)
            {
                @Body
            }
            else
            {
                <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="true">
                    <MudMainContent Style="height:auto; overflow-x: hidden; padding-top:25px; padding-left:25px; padding-right:25px; height:100vh;">
                        @Body
                    </MudMainContent>
                </MudHidden>
                <MudHidden Breakpoint="Breakpoint.SmAndDown" Invert="true">
                    @Body
                </MudHidden>
            }

            <form id="logoutForm" action="Account/Logout" method="post" style="display:none;">
                <AntiforgeryToken />
                <input type="hidden" name="ReturnUrl" value="" />
            </form>
        <script>
            function submitForm(formId) {
                document.getElementById(formId).submit();
            }
        </script>


    </MudLayout>
</CascadingValue>
</AppUserProvider>

@code {
    private bool _drawerOpen = false;
    private bool _showSplashScreen = true; // Splash screen visibility state
    private bool _isFirstRender = true; // To track the first render
    private bool IsGuestPage()
    {
        var currentPath = new Uri(NavigationManager.Uri).AbsolutePath;
        return currentPath.StartsWith("/guest");
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender )
        {
            // Keep the splash screen for 15 seconds after the first render
            _showSplashScreen = false;
            _isFirstRender = false; // Prevent further splash screen rendering
            StateHasChanged(); // Trigger a UI update
        }
    }
    private bool IsStaticSSR => NavigationManager.Uri.Contains("/Account");
}
