@page "/profile"
@using Microsoft.AspNetCore.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider

@attribute [Authorize]

<PageTitle>Profile</PageTitle>

<AuthorizeView>
    <MudText Typo="Typo.h4" Class="mt-2">Hello, @context.User.Identity?.Name!</MudText>
    <MudText  Class="mt-2">Please fill the following form to know more about your preferences</MudText>

    @if (userRole == "Client")
    {
        <MudButton Class="mt-3 mb-4 ml-3 mr-3" Color=Color.Info  
        StartIcon="@Icons.Material.Filled.EditNote" Variant="Variant.Filled" 
        OnClick="buttonCLicked"> Projects Preferences </MudButton>
        if(isClicked)
        {
            <ClientEditingGuidelinesComponent userId="@userId"/>
        }
    }
</AuthorizeView>

@code
{
    private ClaimsPrincipal? currentUser;
    private string userRole;
    private string userId;

    private bool isClicked;
    private void buttonCLicked()
    {
        isClicked = !isClicked;
    }
    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            currentUser = authState.User;
            userRole = currentUser.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value!;
            userId = currentUser.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value!;
        }
        catch(Exception ex)
        {
            throw ex;
        }
    }
}