@inject IDialogService DialogService

<MudDialog>
    <DialogContent>
         
            <MudStack Row="true" Spacing="4" Class="mb-4 ">
            @if (!isAdmin)
            {
                <MudButton Style="min-width: 120px;" Class="rounded-pill"
                           Variant="Variant.Outlined"
                           Color="Color.Success"
                           OnClick="AddHours">
                    ADD HOURS
                </MudButton>
            }
                <MudButton Style="min-width: 120px;" Class="rounded-pill"
                           Variant="Variant.Outlined"
                           Color="Color.Info"
                           OnClick="ViewHours">
                    VIEW
                </MudButton>
            </MudStack>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@Close" Class="rounded-pill mt-3 mr-5" Color="Color.Error" Variant="Variant.Outlined" Size="Size.Large">Close</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public Project currentProject { get; set; } = new Project();
    [Parameter] public string currentUserId { get; set; }
    [Parameter] public bool isAdmin { get; set; } 

    private void AddHours()
    {
        var parameters = new DialogParameters<Add>
        {
            { x => x.Project, currentProject },
            { "currentUserId", currentUserId },
            { "isAdmin", isAdmin}
        };

        var options = new DialogOptions
            {
                CloseButton = true,
                BackdropClick = true,
                CloseOnEscapeKey = true,
                MaxWidth = MaxWidth.Medium
            };

        DialogService.Show<Add>("Add Hours To Project", parameters, options);
    }

    private void ViewHours()
    {
        var parameters = new DialogParameters<ViewTotalLogged>
        {
            { x => x.Project, currentProject },
            { "currentUserId", currentUserId },
            { "isAdmin" , isAdmin}
        };

        var options = new DialogOptions
            {
                CloseButton = true,
                BackdropClick = true,
                CloseOnEscapeKey = true,
                MaxWidth = MaxWidth.Medium
            };

        DialogService.Show<ViewTotalLogged>("Logged Hours for Project", parameters, options);
    }
    private void Close()
    {
        MudDialog.Close();
    }
}
