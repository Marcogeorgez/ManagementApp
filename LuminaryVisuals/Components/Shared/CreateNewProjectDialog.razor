@using LuminaryVisuals.Data.Entities
@using MudBlazor
@using System.Text

<MudDialog>
    <DialogContent>
        <MudForm @ref="form" @bind-IsValid="@success">
            <MudGrid Spacing="1">
                <MudItem xs="12" sm="12">
                    <MudTextField T="string"
                                  Label="Project Name"
                                  Variant="Variant.Outlined"
                                  @bind-Value="newProject.ProjectName"
                                  Required="true"
                                  AutoGrow="true" />
                </MudItem>

                <MudItem xs="12" sm="6">
                    <MudDatePicker Label="Shoot Date" Class="pt-1"
                                   Variant="Variant.Outlined"
                                   Date="newProject.ShootDate"
                                   DateChanged="@(date =>
                                   {
                                        newProject.ShootDate = date;
                                        if (date.HasValue)
                                        {
                                            if(WeeksToDueDateDefault != 0)
                                            {
                                                newProject.DueDate = date.Value.AddDays((WeeksToDueDateDefault * 7));
                                            }
                                            else
                                            {
                                                newProject.DueDate = date.Value.AddDays(28);
                                            }
                                        }
                                   })"
                                   Required="true" />
                </MudItem>

                <MudItem xs="12" sm="6">
                    <MudTextField T="string"
                                  Label="Footage Link" Class="mt-3"
                                  Placeholder="Add link of your footage"
                                  Variant="Variant.Outlined"
                                  @bind-Value="newProject.footageLink"
                                  Required="@(newProject.Status != ProjectStatus.Upcoming)"
                                  AutoGrow="true" />
                </MudItem>

                <MudItem xs="12" sm="6">
                    <MudTextField T="string"
                                  Label="Add Details of Resolution"
                                  Placeholder="Add Details of Footage Resolution"
                                  Variant="Variant.Outlined"
                                  @bind-Value="newProject.ProjectSpecifications.Resolution"
                                  AutoGrow="true"
                                  Required="@(newProject.Status != ProjectStatus.Upcoming)"
                                  RequiredError="This is required when the status of project is not 'Upcoming'" />
                </MudItem>

                <MudItem xs="12" sm="6">
                    <MudTextField T="string"
                                  Label="Add Details of Footage size"
                                  Placeholder="Add Details of Footage size"
                                  Variant="Variant.Outlined"
                                  @bind-Value="newProject.ProjectSpecifications.Size"
                                  AutoGrow="true"
                                  Required="@(newProject.Status != ProjectStatus.Upcoming)"
                                  RequiredError="This is required when the status of project is not 'Upcoming'" />
                </MudItem>

                <MudItem xs="12" sm="6">
                    <MudTextField T="string"
                                  Label="Add Details of Footage Number of Cameras"
                                  Placeholder="Add Details of Number of cameras"
                                  Variant="Variant.Outlined"
                                  @bind-Value="newProject.ProjectSpecifications.CameraNumber"
                                  AutoGrow="true"
                                  Required="@(newProject.Status != ProjectStatus.Upcoming)"
                                  RequiredError="This is required when the status of project is not 'Upcoming'" />
                </MudItem>

                <MudItem xs="12" sm="6">
                    <MudTextField T="string"
                                  Label="Add Details of Color profile"
                                  Placeholder="Add Details of Color profile"
                                  Variant="Variant.Outlined"
                                  @bind-Value="newProject.ProjectSpecifications.ColorProfile"
                                  AutoGrow="true"
                                  Required="@(newProject.Status != ProjectStatus.Upcoming)"
                                  RequiredError="This is required when the status of project is not 'Upcoming'" />
                </MudItem>

                <MudItem xs="12" sm="12" Class="mb-15">
                    <MudText Typo="Typo.body1" Class="mt-3 mb-5">Description*:</MudText>
                    <MudHtmlEditor Outlined="true"
                                   Text="Description"
                                   Html="@newProject.Description"
                                   HtmlChanged="OnNoteTextChanged"
                                   Resizable="true"
                                   style="min-height:150px;"
                                   Placeholder="Example: This wedding was shot on Oahu, at Ko'olau Ballrooms. This is the Bride's second marriage...">
                        <select class="ql-font">
                            <option value="sans-serif"></option>
                            <option value="serif"></option>
                            <option value="monospace"></option>
                        </select>
                        <select class="ql-size">
                            <option value="small"></option>
                            <option selected></option>
                            <option value="large"></option>
                            <option value="huge"></option>
                        </select>
                        <MudHtmlToolbarOptions />
                        <button class="ql-list" value="check"></button>
                        <button class="ql-clean">Remove Formatting</button>
                    </MudHtmlEditor>
                </MudItem>
                <MudItem xs="12" sm="12">
                <MudText Typo="Typo.body2" Color="Color.Error" Class="mt-2" Style="@ErrorMessageDisplay">
                    @errorMessage
                </MudText>
                </MudItem>

                <MudItem xs="12" sm="12">
                    <MudTextField T="string"
                                  Label="Music Preferences"
                                  Placeholder="Place link to music here and any comments"
                                  Variant="Variant.Outlined"
                                  @bind-Value="newProject.MusicPreference"
                                  AutoGrow="true" />
                </MudItem>
            </MudGrid>
        </MudForm>

    </DialogContent>

    <DialogActions>
        <MudButton OnClick="@Cancel" Color="Color.Error" Variant="Variant.Filled" Size="Size.Large">Cancel</MudButton>
        <MudButton Size="Size.Large" Color="Color.Success" Variant="Variant.Filled" OnClick="@Submit">Add Project</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public int WeeksToDueDateDefault { get; set; }
    private Project newProject = new Project();
    private bool success;
    private MudForm form;
    private string errorMessage;

    private void OnNoteTextChanged(string text)
    {
        newProject.Description = text;
    }

    private async void Submit()
    {

        await form.Validate();
        if (newProject.Status != ProjectStatus.Upcoming && string.IsNullOrWhiteSpace(newProject.Description))
        {
            errorMessage = "Description is required.";
            success = false;
            return;
        }
        if (form.IsValid)
        {
newProject.footageLink =" ";
            newProject.Status = ProjectStatus.Upcoming;
            MudDialog.Close(DialogResult.Ok(newProject)); // Return the new project to the main component
        }
        else
        {
            errorMessage = "Please fill in all required fields correctly before submitting.";
        }
    }
    private string ErrorMessageDisplay => string.IsNullOrEmpty(errorMessage) ? "display: none;" : "display: block;";

    private void Cancel()
    {
        MudDialog.Cancel(); // Close without saving
    }
}
