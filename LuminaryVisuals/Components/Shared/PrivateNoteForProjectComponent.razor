@inject IDbContextFactory<ApplicationDbContext> DbFactory

<MudDialog>
    <DialogContent>
        <MudHtmlEditor Label="Private Notes For This Project" Html="@Text" HtmlChanged="OnNoteTextChanged" style="height:40vh;">
        </MudHtmlEditor>

    </DialogContent>

    <DialogActions>
        <MudButton OnClick="@Cancel" Color="Color.Error" Variant="Variant.Filled" Class="mr-3" Size="Size.Large">Close</MudButton>
        <MudButton OnClick="@Save" Color="Color.Info" Variant="Variant.Filled" Class="mr-3" Size="Size.Large">Save</MudButton>

    </DialogActions>

</MudDialog>
@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; }
    private MudForm form;

    [Parameter]
    public Project project { get; set; }
    private string? Text = "";
    protected override void OnInitialized()
    {
        // fetch note if exists
        if (!string.IsNullOrEmpty(project.NotesForProject))
        {
            Text = project.NotesForProject;
        }
    }

    private void OnNoteTextChanged(string text)
    {
        project.NotesForProject = text;
    }
    private async Task Save()
    {

        MudDialog.Close(DialogResult.Ok(project));
    }
    private void Cancel()
    {
        MudDialog.Cancel(); // Close without saving
    }
}
