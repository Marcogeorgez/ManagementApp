@inject IDbContextFactory<ApplicationDbContext> DbFactory

<MudDialog>
    <DialogContent>
        <MudText Class="mt-5 mb-3" Typo="Typo.h5">Private Notes For This Project:</MudText>
        <MudHtmlEditor Html="@Text" HtmlChanged="OnNoteTextChanged" style="height:40vh;">
                                <div style="display: flex; align-items: center; gap: 8px; flex:auto;">
                            <MudButton Style="display: inline-flex; width: 150px;" OnClick="OnExpandCollapseClick">@(_expanded ? "Collapse" : "Expand")</MudButton>
                            <MudCollapse Expanded="_expanded" Style="display: flex;flex-direction: row; flex-wrap: wrap; flex:auto;">

            <select class="ql-font">
                <option value="sans-serif"></option>
                <option value="serif"></option>
                <option value="monospace"></option>
            </select>
            <select class="ql-size">
                <option value="small"></option>
                <option selected></option>
                <option value="large"></option>
                <option value="huge"></option>
            </select>
            <MudHtmlToolbarOptions />
            <button class="ql-list" value="check"></button>
            <button class="ql-clean">Remove Formatting</button>
                </MudCollapse>
            </div>

        </MudHtmlEditor>


    </DialogContent>

    <DialogActions>
        <MudButton OnClick="@Cancel" Color="Color.Error" Variant="Variant.Filled" Class="mr-3" Size="Size.Large">Close</MudButton>
        <MudButton OnClick="@Save" Color="Color.Info" Variant="Variant.Filled" Class="mr-3" Size="Size.Large">Save</MudButton>

    </DialogActions>

</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    private MudForm form;

    [Parameter]
    public Project project { get; set; }
    private string? Text = "";
    protected override async Task OnInitializedAsync()
    {
        // fetch note if exists
        if (!string.IsNullOrEmpty(project.NotesForProject))
        {
            Text = project.NotesForProject;
        }
    }
    bool _expanded = true;

    private void OnExpandCollapseClick()
    {
        _expanded = !_expanded;
    }
    private void OnNoteTextChanged(string text)
    {
        project.NotesForProject = text;
    }
    private async Task Save()
    {

        MudDialog.Close(DialogResult.Ok(project));
    }
    private void Cancel()
    {
        MudDialog.Cancel(); // Close without saving
    }
}
