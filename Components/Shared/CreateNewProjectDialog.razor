@using LuminaryVisuals.Data.Entities
@using MudBlazor
@using System.Text

<MudDialog>
    <DialogContent>
        <MudForm @ref="form" @bind-IsValid="@success">
            <MudTextField T="string"
                          Label="Project Name"
                          Variant="Variant.Outlined"
                          @bind-Value="newProject.ProjectName"
                          Required="true"
                          AutoGrow=true/>

            <MudDatePicker Label="Shoot Date" Class="mb-1 mt-1"
                           Variant="Variant.Outlined"
                           Date="newProject.ShootDate"
                           DateChanged="@(date =>
                           {
                                    newProject.ShootDate = date;
                                    if (date.HasValue)
                                    {
                                        if(WeeksToDueDateDefault  != 0)
                                        {
                                        newProject.DueDate = date.Value.AddDays((WeeksToDueDateDefault * 7)); // Set Due Date to 4 weeks later

                                        }
                                        else{
                                        newProject.DueDate = date.Value.AddDays(28); // Set Due Date to 4 weeks later
                                        }
                                    }  
                           })"
                           Required="true"/>
            <MudTextField T="string"
                          Label="Footage Link"
                          Placeholder="Add link of your footage"
                          Variant="Variant.Outlined"
                          @bind-Value="footagelink"
                          Required="true"
                          AutoGrow=true />

            <MudTextField T="string"
                          Label="Add Details of footage"
                          Placeholder="Add Details of footage like Resolution, Footage size, Number of cameras, Color profile for each camera"
                          Variant="Variant.Outlined"
                          @bind-Value="footageRequirements"
x                         AutoGrow=true />

            <MudTextField T="string"
                          Label="Deliverables"
                          Placeholder="Write down what the deliverables for this project will be"
                          Variant="Variant.Outlined"
                          @bind-Value="deliverables"
                          Required="true"
                          RequiredError="Please Write down what the deliverables for this project will be"
                          AutoGrow=true />
            <MudField Label="Description"  ></MudField>
            <MudHtmlEditor Outlined="true"
                           Text="Description"
                           Html="@newProject.Description"
                           HtmlChanged="OnNoteTextChanged"
                           Resizable=true
                           style="min-height:150px;"
                           Placeholder="Example: This wedding was shot on Oahu, at Ko'olau Ballrooms.
This is the Bride's second marriage, and they're a little older than the usual bride and grooms we have.
This is a Hawaiian Wedding, so segments will have prayers in Hawaiian language, but the rest is in English. The Ceremony is in English, the speeches are in English.
The Bride was married like I said before, so this wedding was quite special because she didn't think she'd ever get married again until she met Keola." >
                    <select class="ql-font">
                        <option value="sans-serif"></option>
                        <option value="serif"></option>
                        <option value="monospace"></option>
                    </select>
                    <select class="ql-size">
                        <option value="small"></option>
                        <option selected></option>
                        <option value="large"></option>
                        <option value="huge"></option>
                    </select>
                    <MudHtmlToolbarOptions />
                    <button class="ql-list" value="check"></button>
                    <button class="ql-clean">Remove Formatting</button>    <!-- Removes formatting -->
            </MudHtmlEditor>

            <MudTextField T="string"
                    Class="mt-3"
                          Label="Music preferences:"
                          Placeholder="Place link to music here and any comments why might have"
                          Variant="Variant.Outlined"
                          @bind-Value="preferences"
                          AutoGrow=true />
        </MudForm>
        <MudText Typo="Typo.body2" Color="Color.Error" Class="mt-2" Style="@ErrorMessageDisplay">
            @errorMessage
        </MudText>
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="@Cancel" Color="Color.Error" Variant="Variant.Filled" Size="Size.Large">Cancel</MudButton>
        <MudButton Size="Size.Large" Color="Color.Primary" Variant="Variant.Filled" OnClick="@Submit">Add Project</MudButton>
    </DialogActions>

</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public int WeeksToDueDateDefault { get; set; }
    private Project newProject = new Project();
    private bool success;
    private MudForm form;
    private string errorMessage;
    private string footagelink;
    private string preferences;
    private string deliverables;
    private string footageRequirements;
    private string filledFootageRequirements;
    private string[] _footageRequirements = { "Resolution", "Size", "Number of cameras", "Color profile for each camera: " };
    private enum ProgressBarValue
    {
        Zero = 0,
        Twenty = 20,
        Forty = 40,
        Sixty = 60,
        Eighty = 80,
        Hundred = 100
    }
    private void OnNoteTextChanged(string text)
    {
        newProject.Description = text;
    }

    private ProgressBarValue ProgressEnum
    {
        get => (ProgressBarValue) newProject.ProgressBar;
        set => newProject.ProgressBar = (int) value;
    }
    private async void Submit()
    {

        await form.Validate();
        if (form.IsValid)
        {
            newProject.Status = ProjectStatus.Upcoming;
            StringBuilder sb = new StringBuilder();
            sb.AppendLine(footagelink);
            sb.AppendLine(footageRequirements);
            foreach (var requirement in _footageRequirements)
            {
                if (!footageRequirements.Contains(requirement))
                {
                    sb.AppendLine($"Warning: {requirement}");                    
                }
            }
            sb.AppendLine(deliverables);
            sb.AppendLine(newProject.Description);
            if (string.IsNullOrWhiteSpace(preferences))
                sb.AppendLine($"Warning: Music preferences:");
            sb.AppendLine(preferences);
            newProject.Description = sb.ToString();
            MudDialog.Close(DialogResult.Ok(newProject)); // Return the new project to the main component
        }
        else
        {
            errorMessage = "Please fill in all required fields correctly before submitting.";
        }
    }
    private string ErrorMessageDisplay => string.IsNullOrEmpty(errorMessage) ? "display: none;" : "display: block;";

    private void Cancel()
    {
        MudDialog.Cancel(); // Close without saving
    }
}
