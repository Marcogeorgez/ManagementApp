@using LuminaryVisuals.Data.Entities
@using MudBlazor

<MudDialog>
    <DialogContent>
        <MudForm @ref="form" @bind-IsValid="@success">
            <MudTextField T="string"
                          Label="Project Name"
                          Value="@newProject.ProjectName"
                          ReadOnly="true" />

            <MudTextField T="string"
                          Label="Description"
                          Value="@newProject.Description"
                          ReadOnly="true" />

            <MudDatePicker Label="Shoot Date"
                           Date="@newProject.ShootDate"
                           ReadOnly="true" />
            <MudDatePicker Label="Due Date"
                           Date="@newProject.DueDate"
                           ReadOnly="true" />

            <MudDatePicker Label="Working Month"
                           Date="@newProject.WorkingMonth"
                           ReadOnly="true" />

            <MudTextField T="string"
                          Label="Reason For Archiving Project"
                          @bind-Value="newProject.Archive.Reason"
                          Required=true
                          RequiredError="you must enter the reason for archiving this project"/>
        </MudForm>
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="@Cancel">Cancel</MudButton>
        <MudButton Color="Color.Warning" OnClick="@Submit">Archive Project</MudButton>
    </DialogActions>

</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public Project newProject { get; set; } = new Project();
    private bool success;
    private MudForm form;
    private DateTime _minDate = DateTime.Now.Date;
    private string errorMessage = "";
    private string ErrorMessageDisplay => string.IsNullOrEmpty(errorMessage) ? "display: none;" : "display: block;";

    protected override void OnInitialized()
    {
        newProject.Archive = new Archive();
    }

    private async Task Submit()
    {
        await form.Validate();
        if (form.IsValid)
        {
            MudDialog.Close(DialogResult.Ok(newProject.Archive.Reason)); // Return the new project to the main component
        }
        else
        {
            errorMessage = "Please fill in all required fields correctly before submitting.";
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel(); // Close without saving
    }
}
