@using LuminaryVisuals.Data.Entities
@using Microsoft.AspNetCore.Identity
@inject NavigationManager NavigationManager
@inject SignInManager<ApplicationUser> SignInManager
@inherits LayoutComponentBase


@* Main Top Bar *@
<MudAppBar Elevation="1">

        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
        <MudImage Src="/Logo.png" Alt="Logo" Height="30" Class="fit-image" />
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.MdAndUp">
        <MudImage Src="/Logo.png" Alt="Logo" Height="25" Class="fit-image" />
        </MudHidden>
        <MudText Typo="Typo.h5">Luminary Visuals</MudText>
        <MudSpacer />
        <MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
        <MudSwitch @bind-Value="_isDarkMode" Color="Color.Primary" Class="ma-4" T="bool"/>
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />

    <MudDrawer Class="" @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2" OpenMiniOnHover="true">
        @*NavMenu*@
            <MudNavMenu Class="mud-width-full ">
            <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
            <MudNavLink Href="auth" Icon="@Icons.Material.Filled.Security">Auth Required</MudNavLink>
            <MudNavLink Href="admin-dashboard" Icon="@Icons.Material.Filled.Dashboard">Admin Dashboard</MudNavLink>
            <AuthorizeView>
                <Authorized>
                    <MudNavGroup Title="Settings" Icon="fas fa-cogs" Expanded="true">
                        <MudNavLink Href="Account/Manage" Icon="@Icons.Material.Filled.People" IconColor="Color.Success">Users</MudNavLink>
                        <MudNavLink Href="/security" Icon="@Icons.Material.Filled.Security" IconColor="Color.Info">Security</MudNavLink>
                    </MudNavGroup>
                    <MudNavLink OnClick="@(() => LogoutClick())" Icon="@Icons.Material.Filled.ExitToApp">
                        Logout
                    </MudNavLink>
                </Authorized>
                <NotAuthorized>
                    <MudNavLink Href="Account/Register" Icon="@Icons.Material.Filled.PersonAdd">Register</MudNavLink>
                    <MudNavLink Href="Account/Login" Icon="@Icons.Material.Filled.Login">Login</MudNavLink>
                </NotAuthorized>
            </AuthorizeView>
        </MudNavMenu>
</MudDrawer>
</MudAppBar>


@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    private async Task LogoutClick()
    {
        // Implement your logout logic here
        NavigationManager.NavigateTo("Account/Logout", true);
    }
    MudTheme _theme = new MudTheme()
        {
            PaletteLight = new PaletteLight()
            {
                Primary = Colors.Blue.Darken1,
                Secondary = Colors.Green.Accent4,
                AppbarBackground = Colors.Blue.Darken1,
                DrawerBackground = Colors.Gray.Lighten3, // Add this line to match AppbarBackground
                DrawerText = Colors.Gray.Darken3
                  
                
            },
            Typography = new Typography()
            {
                Default = new Default()
                {
                    FontFamily = new[] { "Chokokutai", "Inter", "sans-serif" },
                    FontWeight = 400  // Try different weights: 300, 400, 500, etc.
                },
            },
            LayoutProperties = new LayoutProperties()
            {
                DrawerWidthLeft = "175px",
            }
        };
    private bool _isDarkMode;
}







